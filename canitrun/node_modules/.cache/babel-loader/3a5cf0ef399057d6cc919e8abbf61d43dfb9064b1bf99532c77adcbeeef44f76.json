{"ast":null,"code":"var _jsxFileName = \"/Users/nam-yongho/Desktop/Projects/Web Developing Projects/Can It Run/can_it_run/canitrun/src/front_page.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FrontPage({\n  user_cpu,\n  user_gpu,\n  user_ram,\n  game_name,\n  onChange\n}) {\n  _s();\n  const history = useHistory();\n  const handleSubmit = e => {\n    e.preventDefault();\n    history.push(\"/result\");\n  };\n  const [cpuSuggestions, setCpuSuggestions] = useState([]);\n  const [gpuSuggestions, setGpuSuggestions] = useState([]);\n  const [cpuFocused, setCpuFocused] = useState(false);\n  const [gpuFocused, setGpuFocused] = useState(false);\n  const fetchSuggestions = async (input, type) => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/suggestions?input=${input}&type=${type}`);\n      if (response.ok) {\n        const data = await response.json();\n        if (type === 'CPU') {\n          setCpuSuggestions(data);\n        } else if (type === 'GPU') {\n          setGpuSuggestions(data);\n        }\n      } else {\n        console.error('Failed to fetch suggestions:', response.status);\n      }\n    } catch (error) {\n      console.error('Failed to fetch suggestions:', error);\n    }\n  };\n  useEffect(() => {\n    if (user_cpu) fetchSuggestions(user_cpu, 'CPU');\n  }, [user_cpu]);\n  useEffect(() => {\n    if (user_gpu) fetchSuggestions(user_gpu, 'GPU');\n  }, [user_gpu]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inputs\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_cpu\",\n        children: \"User CPU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user_cpu\",\n          name: \"user_cpu\",\n          placeholder: \"Enter your CPU here\",\n          value: user_cpu,\n          onChange: onChange,\n          onFocus: () => setCpuFocused(true),\n          onBlur: () => setCpuFocused(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), cpuFocused && cpuSuggestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: cpuSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-item\",\n            onClick: () => {\n              onChange({\n                target: {\n                  name: 'user_cpu',\n                  value: suggestion.Model\n                }\n              });\n            },\n            children: suggestion.Model\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_gpu\",\n        children: \"User GPU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user_gpu\",\n          name: \"user_gpu\",\n          placeholder: \"Enter your GPU here\",\n          value: user_gpu,\n          onChange: onChange,\n          onFocus: () => setGpuFocused(true),\n          onBlur: () => setGpuFocused(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), gpuFocused && gpuSuggestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: gpuSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-item\",\n            onClick: () => {\n              onChange({\n                target: {\n                  name: 'user_gpu',\n                  value: suggestion.Model\n                }\n              });\n            },\n            children: suggestion.Model\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(FrontPage, \"Kgjlo4QUJ+Lq9zVjR8UjcjKmk0Q=\", false, function () {\n  return [useHistory];\n});\n_c = FrontPage;\nexport default FrontPage;\nvar _c;\n$RefreshReg$(_c, \"FrontPage\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","jsxDEV","_jsxDEV","FrontPage","user_cpu","user_gpu","user_ram","game_name","onChange","_s","history","handleSubmit","e","preventDefault","push","cpuSuggestions","setCpuSuggestions","gpuSuggestions","setGpuSuggestions","cpuFocused","setCpuFocused","gpuFocused","setGpuFocused","fetchSuggestions","input","type","response","fetch","ok","data","json","console","error","status","id","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","className","name","placeholder","value","onFocus","onBlur","length","map","suggestion","index","onClick","target","Model","_c","$RefreshReg$"],"sources":["/Users/nam-yongho/Desktop/Projects/Web Developing Projects/Can It Run/can_it_run/canitrun/src/front_page.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction FrontPage({user_cpu, user_gpu, user_ram, game_name, onChange}) {\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        history.push(\"/result\");\n    };\n\n    const [cpuSuggestions, setCpuSuggestions] = useState([]);\n    const [gpuSuggestions, setGpuSuggestions] = useState([]);\n\n    const [cpuFocused, setCpuFocused] = useState(false);\n    const [gpuFocused, setGpuFocused] = useState(false);\n\n    const fetchSuggestions = async (input, type) => {\n        try {\n            const response = await fetch(`http://localhost:3001/api/suggestions?input=${input}&type=${type}`);\n            if (response.ok) {\n                const data = await response.json();\n                if (type === 'CPU') {\n                    setCpuSuggestions(data);\n                } else if (type === 'GPU') {\n                    setGpuSuggestions(data);\n                }\n            } else {\n                console.error('Failed to fetch suggestions:', response.status);\n            }\n        } catch (error) {\n            console.error('Failed to fetch suggestions:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (user_cpu) fetchSuggestions(user_cpu, 'CPU');\n    }, [user_cpu]);\n\n    useEffect(() => {\n        if (user_gpu) fetchSuggestions(user_gpu, 'GPU');\n    }, [user_gpu]);\n\n    return (\n        <div id=\"inputs\">\n            <form onSubmit={handleSubmit}>\n                {/* ... other input fields ... */}\n\n                <label htmlFor='user_cpu'>User CPU</label><br/>\n                <div className=\"relative-container\">\n                    <input\n                        type='text'\n                        id='user_cpu'\n                        name='user_cpu'\n                        placeholder='Enter your CPU here'\n                        value={user_cpu}\n                        onChange={onChange}\n                        onFocus={() => setCpuFocused(true)}\n                        onBlur={() => setCpuFocused(false)}\n                    />\n                    {cpuFocused && cpuSuggestions.length > 0 ? (\n                        <div className=\"suggestions\">\n                            {cpuSuggestions.map((suggestion, index) => (\n                                <div \n                                    className=\"suggestion-item\"\n                                    key={index} \n                                    onClick={() => {\n                                        onChange({ target: { name: 'user_cpu', value: suggestion.Model } });\n                                    }}\n                                >\n                                    {suggestion.Model}\n                                </div>\n                            ))}\n                        </div>\n                    ) : null}\n                </div>\n                <br/>\n\n                <label htmlFor='user_gpu'>User GPU</label><br/>\n                <div className=\"relative-container\">\n                    <input\n                        type='text'\n                        id='user_gpu'\n                        name='user_gpu'\n                        placeholder='Enter your GPU here'\n                        value={user_gpu}\n                        onChange={onChange}\n                        onFocus={() => setGpuFocused(true)}\n                        onBlur={() => setGpuFocused(false)}\n                    />\n                    {gpuFocused && gpuSuggestions.length > 0 ? (\n                        <div className=\"suggestions\">\n                            {gpuSuggestions.map((suggestion, index) => (\n                                <div \n                                    className=\"suggestion-item\"\n                                    key={index} \n                                    onClick={() => {\n                                        onChange({ target: { name: 'user_gpu', value: suggestion.Model } });\n                                    }}\n                                >\n                                    {suggestion.Model}\n                                </div>\n                            ))}\n                        </div>\n                    ) : null}\n                </div>\n                <br/>\n\n                {/* ... other input fields ... */}\n\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n    );\n}\n\nexport default FrontPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}