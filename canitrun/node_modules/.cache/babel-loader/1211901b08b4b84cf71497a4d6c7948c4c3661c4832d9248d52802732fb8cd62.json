{"ast":null,"code":"var _jsxFileName = \"/Users/nam-yongho/Desktop/Projects/Web Developing Projects/Can It Run/can_it_run/canitrun/src/front_page.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FrontPage({\n  user_cpu,\n  user_gpu,\n  user_ram,\n  game_name,\n  game_id,\n  onChange\n}) {\n  _s();\n  const history = useHistory();\n  const handleSubmit = e => {\n    game_id = 12;\n    e.preventDefault();\n    history.push(\"/result\");\n  };\n  const [gameSuggestions, setGameSuggestions] = useState([]);\n  const [cpuSuggestions, setCpuSuggestions] = useState([]);\n  const [gpuSuggestions, setGpuSuggestions] = useState([]);\n  const [gameFocused, setGameFocused] = useState(false);\n  const [cpuFocused, setCpuFocused] = useState(false);\n  const [gpuFocused, setGpuFocused] = useState(false);\n  const fetchSuggestions = async (input, type) => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/suggestions?input=${input}&type=${type}`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        console.log(response);\n        if (type === 'CPU') {\n          setCpuSuggestions(data);\n        } else if (type === 'GPU') {\n          setGpuSuggestions(data);\n        } else if (type === 'Game') {\n          setGameSuggestions(data);\n        }\n      } else {\n        console.error('inside if Failed to fetch suggestions:', response.status);\n      }\n    } catch (error) {\n      console.error('Failed to fetch suggestions:', error);\n    }\n  };\n  useEffect(() => {\n    // Clear the previous timer if it exists\n    const timer = setTimeout(() => {\n      // Only call fetchSuggestions if game_name is not empty\n      if (game_name) {\n        fetchSuggestions(game_name.toUpperCase(), 'Game');\n      } else {\n        setGameSuggestions([]);\n      }\n    }, 1000); // 3 seconds\n\n    // Cleanup function to clear the timer\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [game_name]);\n  useEffect(() => {\n    if (user_cpu) fetchSuggestions(user_cpu, 'CPU');\n  }, [user_cpu]);\n  useEffect(() => {\n    if (user_gpu) fetchSuggestions(user_gpu, 'GPU');\n  }, [user_gpu]);\n  const onGameBlurDelay = () => {\n    setTimeout(() => {\n      setGameFocused(false);\n    }, 200); // 200 milliseconds delay\n  };\n\n  const onCpuBlurDelay = () => {\n    setTimeout(() => {\n      setCpuFocused(false);\n    }, 200); // 200 milliseconds delay\n  };\n\n  const onGpuBlurDelay = () => {\n    setTimeout(() => {\n      setGpuFocused(false);\n    }, 200); // 200 milliseconds delay\n  };\n\n  const [isGameValid, setIsGameValid] = useState(false);\n  const [isCpuValid, setIsCpuValid] = useState(false);\n  const [isGpuValid, setIsGpuValid] = useState(false);\n\n  // Function to check if input matches any of the suggestions\n  const checkInputValidity = (input, suggestions, type) => {\n    const isValid = suggestions.some(suggestion => suggestion.Model.toLowerCase() === input.toLowerCase());\n    if (type === \"CPU\") {\n      setIsCpuValid(isValid);\n    } else if (type === \"GPU\") {\n      setIsGpuValid(isValid);\n    } else if (type === \"Game\") {\n      setIsGameValid(isValid);\n    }\n  };\n  useEffect(() => {\n    if (game_name && gameSuggestions.length > 0) {\n      checkInputValidity(game_name, gameSuggestions, \"Game\");\n    }\n  }, [game_name, gameSuggestions]);\n  useEffect(() => {\n    if (user_cpu && cpuSuggestions.length > 0) {\n      checkInputValidity(user_cpu, cpuSuggestions, \"CPU\");\n    }\n  }, [user_cpu, cpuSuggestions]);\n  useEffect(() => {\n    if (user_gpu && gpuSuggestions.length > 0) {\n      checkInputValidity(user_gpu, gpuSuggestions, \"GPU\");\n    }\n  }, [user_gpu, gpuSuggestions]);\n  let id = \"inputs\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"game_name\",\n        children: \"Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"game_name\",\n        name: \"game_name\",\n        placeholder: \"Enter Name of the Game here\",\n        value: game_name,\n        onChange: onChange,\n        onFocus: () => setGameFocused(true),\n        onBlur: onGameBlurDelay,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gameFocused && gameSuggestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: gameSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-item\",\n            onClick: () => {\n              onChange({\n                target: {\n                  name: 'game_name',\n                  value: suggestion.Model\n                }\n              });\n            },\n            children: suggestion.Model\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_cpu\",\n        children: \"User CPU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_cpu\",\n        name: \"user_cpu\",\n        placeholder: \"Enter your CPU here\",\n        value: user_cpu,\n        onChange: onChange,\n        onFocus: () => setCpuFocused(true),\n        onBlur: onCpuBlurDelay,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cpuFocused && cpuSuggestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: cpuSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-item\",\n            onClick: () => {\n              console.log(\"Clicked on:\", suggestion.Model);\n              onChange({\n                target: {\n                  name: 'user_cpu',\n                  value: suggestion.Model\n                }\n              });\n            },\n            children: suggestion.Model\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_gpu\",\n        children: \"User GPU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_gpu\",\n        name: \"user_gpu\",\n        placeholder: \"Enter your GPU here\",\n        value: user_gpu,\n        onChange: onChange,\n        onFocus: () => setGpuFocused(true),\n        onBlur: onGpuBlurDelay,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gpuFocused && gpuSuggestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: gpuSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-item\",\n            onClick: () => {\n              onChange({\n                target: {\n                  name: 'user_gpu',\n                  value: suggestion.Model\n                }\n              });\n            },\n            children: suggestion.Model\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_ram\",\n        children: \"User RAM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_ram\",\n        name: \"user_ram\",\n        placeholder: \"Enter your RAM here\",\n        value: user_ram,\n        onChange: onChange,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isGameValid ? \"Game input is valid\" : \"Game input is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isCpuValid ? \"CPU input is valid\" : \"CPU input is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isGpuValid ? \"GPU input is valid\" : \"GPU input is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_s(FrontPage, \"unS3agn02fhinr1kt5o3fjN5oG0=\", false, function () {\n  return [useHistory];\n});\n_c = FrontPage;\nexport default FrontPage;\nvar _c;\n$RefreshReg$(_c, \"FrontPage\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","jsxDEV","_jsxDEV","FrontPage","user_cpu","user_gpu","user_ram","game_name","game_id","onChange","_s","history","handleSubmit","e","preventDefault","push","gameSuggestions","setGameSuggestions","cpuSuggestions","setCpuSuggestions","gpuSuggestions","setGpuSuggestions","gameFocused","setGameFocused","cpuFocused","setCpuFocused","gpuFocused","setGpuFocused","fetchSuggestions","input","type","response","fetch","ok","data","json","console","log","error","status","timer","setTimeout","toUpperCase","clearTimeout","onGameBlurDelay","onCpuBlurDelay","onGpuBlurDelay","isGameValid","setIsGameValid","isCpuValid","setIsCpuValid","isGpuValid","setIsGpuValid","checkInputValidity","suggestions","isValid","some","suggestion","Model","toLowerCase","length","id","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","value","onFocus","onBlur","autoComplete","className","map","index","onClick","target","_c","$RefreshReg$"],"sources":["/Users/nam-yongho/Desktop/Projects/Web Developing Projects/Can It Run/can_it_run/canitrun/src/front_page.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n  \nfunction FrontPage({user_cpu, user_gpu, user_ram, game_name, game_id, onChange}) {\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        game_id = 12;\n        e.preventDefault();\n        history.push(\"/result\");\n    };\n    \n    const [gameSuggestions, setGameSuggestions] = useState([]);\n    const [cpuSuggestions, setCpuSuggestions] = useState([]);\n    const [gpuSuggestions, setGpuSuggestions] = useState([]);\n\n    const [gameFocused, setGameFocused] = useState(false);\n    const [cpuFocused, setCpuFocused] = useState(false);\n    const [gpuFocused, setGpuFocused] = useState(false);\n\n\n    const fetchSuggestions = async (input, type) => {\n        try {\n            const response = await fetch(`http://localhost:3001/api/suggestions?input=${input}&type=${type}`);\n            if (response.ok) {\n                const data = await response.json();\n                console.log(data);\n                console.log(response);\n                if (type === 'CPU') {\n                setCpuSuggestions(data);\n                } else if (type === 'GPU') {\n                setGpuSuggestions(data);\n                } else if (type === 'Game') {\n                setGameSuggestions(data);\n                }\n            } else {\n                console.error('inside if Failed to fetch suggestions:', response.status);\n            }\n        } catch (error) {\n        console.error('Failed to fetch suggestions:', error);\n        }\n    };\n\n    useEffect(() => {\n      // Clear the previous timer if it exists\n      const timer = setTimeout(() => {\n        // Only call fetchSuggestions if game_name is not empty\n        if (game_name) {\n          fetchSuggestions(game_name.toUpperCase(), 'Game');\n        }else{\n          setGameSuggestions([])\n        }\n      }, 1000); // 3 seconds\n    \n      // Cleanup function to clear the timer\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [game_name]);\n\n    useEffect(() => {\n        if (user_cpu) fetchSuggestions(user_cpu, 'CPU');\n    }, [user_cpu]);\n\n    useEffect(() => {\n        if (user_gpu) fetchSuggestions(user_gpu, 'GPU');\n    }, [user_gpu]);\n\n    const onGameBlurDelay = () => {\n        setTimeout(() => {\n          setGameFocused(false);\n        }, 200); // 200 milliseconds delay\n      };\n\n    const onCpuBlurDelay = () => {\n        setTimeout(() => {\n          setCpuFocused(false);\n        }, 200); // 200 milliseconds delay\n      };\n     \n    const onGpuBlurDelay = () => {\n        setTimeout(() => {\n            setGpuFocused(false);\n        }, 200); // 200 milliseconds delay\n    };\n\n    const [isGameValid, setIsGameValid] = useState(false);\n    const [isCpuValid, setIsCpuValid] = useState(false);\n    const [isGpuValid, setIsGpuValid] = useState(false);\n  \n    // Function to check if input matches any of the suggestions\n    const checkInputValidity = (input, suggestions, type) => {\n      const isValid = suggestions.some(\n        (suggestion) => suggestion.Model.toLowerCase() === input.toLowerCase()\n      );\n  \n      if (type === \"CPU\") {\n        setIsCpuValid(isValid);\n      } else if (type === \"GPU\") {\n        setIsGpuValid(isValid);\n      } else if (type === \"Game\") {\n        setIsGameValid(isValid);\n      }\n    };\n  \n    useEffect(() => {\n        if (game_name && gameSuggestions.length > 0) {\n          checkInputValidity(game_name, gameSuggestions, \"Game\");\n        }\n      }, [game_name, gameSuggestions]);\n\n    useEffect(() => {\n      if (user_cpu && cpuSuggestions.length > 0) {\n        checkInputValidity(user_cpu, cpuSuggestions, \"CPU\");\n      }\n    }, [user_cpu, cpuSuggestions]);\n  \n    useEffect(() => {\n      if (user_gpu && gpuSuggestions.length > 0) {\n        checkInputValidity(user_gpu, gpuSuggestions, \"GPU\");\n      }\n    }, [user_gpu, gpuSuggestions]);\n\n  let id = \"inputs\";\n  return (\n        <div id={id}>\n            <form onSubmit={handleSubmit}>\n            <label htmlFor='game_name'>Game</label><br/>\n            <input\n                type='text'\n                id='game_name'\n                name='game_name'\n                placeholder='Enter Name of the Game here'\n                value={game_name}\n                onChange= {onChange}\n                onFocus={() => setGameFocused(true)}\n                onBlur={onGameBlurDelay}\n                autoComplete=\"off\"\n            />\n            <div>\n            {gameFocused && gameSuggestions.length > 0 ? (\n                <div className=\"suggestions\">\n                {gameSuggestions.map((suggestion, index) => (\n                    <div \n                    className=\"suggestion-item\"\n                    key={index} \n                    onClick={() => {\n                        onChange({ target: { name: 'game_name', value: suggestion.Model } });           \n                    }}\n                    >\n                    {suggestion.Model}\n                    </div>\n                ))}\n                </div>\n            ) : null}\n            </div>\n            <br/>\n            <label htmlFor='user_cpu'>User CPU</label><br/>\n            <input\n            type='text'\n            id='user_cpu'\n            name='user_cpu'\n            placeholder='Enter your CPU here'\n            value={user_cpu}\n            onChange={onChange}\n            onFocus={() => setCpuFocused(true)}\n            onBlur={onCpuBlurDelay}\n            autoComplete=\"off\"\n            />\n            <div>\n            {cpuFocused && cpuSuggestions.length > 0 ? (\n                <div className=\"suggestions\">\n                {cpuSuggestions.map((suggestion, index) => (\n                    <div \n                    className=\"suggestion-item\"\n                    key={index} \n                    onClick={() => {\n                        console.log(\"Clicked on:\", suggestion.Model);\n                        onChange({ target: { name: 'user_cpu', value: suggestion.Model } });                    \n                    }}\n                    >\n                    {suggestion.Model}\n                    </div>\n                ))}\n                </div>\n            ) : null}\n            </div>\n            <br/>\n            <label htmlFor='user_gpu'>User GPU</label><br/>\n            <input\n                type='text'\n                id='user_gpu'\n                name='user_gpu'\n                placeholder='Enter your GPU here'\n                value={user_gpu}\n                onChange= {onChange}\n                onFocus={() => setGpuFocused(true)}\n                onBlur={onGpuBlurDelay}\n                autoComplete=\"off\"\n            />\n            <div>\n            {gpuFocused && gpuSuggestions.length > 0 ? (\n                <div className=\"suggestions\">\n                {gpuSuggestions.map((suggestion, index) => (\n                    <div \n                    className=\"suggestion-item\"\n                    key={index} \n                    onClick={() => {\n                        onChange({ target: { name: 'user_gpu', value: suggestion.Model } });\n                    }}\n                    >\n                    {suggestion.Model}\n                    </div>\n                ))}\n                </div>\n            ) : null}\n            </div>\n            <br/>\n            <label htmlFor='user_ram'>User RAM</label><br/>\n            <input\n                type='text'\n                id='user_ram'\n                name='user_ram'\n                placeholder='Enter your RAM here'\n                value={user_ram}\n                onChange= {onChange}\n                autoComplete=\"off\"\n            />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n            <div>\n                {isGameValid ? \"Game input is valid\" : \"Game input is not valid\"}\n            </div>\n            <div>\n                {isCpuValid ? \"CPU input is valid\" : \"CPU input is not valid\"}\n            </div>\n            <div>\n                {isGpuValid ? \"GPU input is valid\" : \"GPU input is not valid\"}\n            </div>\n        </div>\n  );\n}\n\nexport default FrontPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}