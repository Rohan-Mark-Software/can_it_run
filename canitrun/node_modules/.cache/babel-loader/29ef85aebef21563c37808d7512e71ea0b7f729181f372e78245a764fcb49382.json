{"ast":null,"code":"var _jsxFileName = \"/Users/nam-yongho/Desktop/Projects/Web Developing Projects/Can It Run/can_it_run/canitrun/src/front_page.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FrontPage({\n  user_cpu,\n  user_gpu,\n  user_ram,\n  game_name,\n  onChange\n}) {\n  _s();\n  const history = useHistory();\n  const handleSubmit = e => {\n    e.preventDefault();\n    history.push(\"/result\");\n  };\n  const [cpuSuggestions, setCpuSuggestions] = useState([]);\n  const [gpuSuggestions, setGpuSuggestions] = useState([]);\n  const [cpuFocused, setCpuFocused] = useState(false);\n  const [gpuFocused, setGpuFocused] = useState(false);\n  const fetchSuggestions = async (input, type) => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/suggestions?input=${input}&type=${type}`);\n      console.log(response);\n      if (response.ok) {\n        const data = await response.json();\n        if (type === 'CPU') {\n          setCpuSuggestions(data);\n          console.log(cpuSuggestions);\n          console.log('cpu updated');\n        } else if (type === 'GPU') {\n          setGpuSuggestions(data);\n          console.log(gpuSuggestions);\n          console.log('gpu updated');\n        }\n      } else {\n        console.error('Failed to fetch suggestions:', response.status);\n      }\n    } catch (error) {\n      console.error('Failed to fetch suggestions:', error);\n    }\n  };\n  useEffect(() => {\n    if (user_cpu) fetchSuggestions(user_cpu, 'CPU');\n  }, [user_cpu]);\n  useEffect(() => {\n    if (user_gpu) fetchSuggestions(user_gpu, 'GPU');\n  }, [user_gpu]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"game_name\",\n        children: \"Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"game_name\",\n        name: \"game_name\",\n        placeholder: \"Enter Name of the Game here\",\n        value: game_name,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_cpu\",\n        children: \"User CPU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_cpu\",\n        name: \"user_cpu\",\n        placeholder: \"Enter your CPU here\",\n        value: user_cpu,\n        onChange: onChange,\n        onFocus: () => setCpuFocused(true),\n        onBlur: () => setCpuFocused(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cpuFocused && cpuSuggestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: cpuSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-item\",\n            onClick: () => {\n              onChange({\n                target: {\n                  name: 'user_cpu',\n                  value: suggestion.Model\n                }\n              });\n            },\n            children: suggestion.Model\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_gpu\",\n        children: \"User GPU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_gpu\",\n        name: \"user_gpu\",\n        placeholder: \"Enter your GPU here\",\n        value: user_gpu,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gpuSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: suggestion.model\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_ram\",\n        children: \"User RAM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_ram\",\n        name: \"user_ram\",\n        placeholder: \"Enter your RAM here\",\n        value: user_ram,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(FrontPage, \"Kgjlo4QUJ+Lq9zVjR8UjcjKmk0Q=\", false, function () {\n  return [useHistory];\n});\n_c = FrontPage;\nexport default FrontPage;\nvar _c;\n$RefreshReg$(_c, \"FrontPage\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","Link","useHistory","jsxDEV","_jsxDEV","FrontPage","user_cpu","user_gpu","user_ram","game_name","onChange","_s","history","handleSubmit","e","preventDefault","push","cpuSuggestions","setCpuSuggestions","gpuSuggestions","setGpuSuggestions","cpuFocused","setCpuFocused","gpuFocused","setGpuFocused","fetchSuggestions","input","type","response","fetch","console","log","ok","data","json","error","status","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","placeholder","value","onFocus","onBlur","length","map","suggestion","index","onClick","target","Model","model","_c","$RefreshReg$"],"sources":["/Users/nam-yongho/Desktop/Projects/Web Developing Projects/Can It Run/can_it_run/canitrun/src/front_page.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\n\n  \nfunction FrontPage({user_cpu, user_gpu, user_ram, game_name, onChange}) {\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        history.push(\"/result\");\n    };\n\n    const [cpuSuggestions, setCpuSuggestions] = useState([]);\n    const [gpuSuggestions, setGpuSuggestions] = useState([]);\n\n    const [cpuFocused, setCpuFocused] = useState(false);\n    const [gpuFocused, setGpuFocused] = useState(false);\n\n\n    const fetchSuggestions = async (input, type) => {\n        try {\n            const response = await fetch(`http://localhost:3001/api/suggestions?input=${input}&type=${type}`);\n            console.log(response);\n            if (response.ok) {\n                const data = await response.json();\n                if (type === 'CPU') {\n                setCpuSuggestions(data);\n                console.log(cpuSuggestions)\n                console.log('cpu updated');\n                } else if (type === 'GPU') {\n                setGpuSuggestions(data);\n                console.log(gpuSuggestions)\n                console.log('gpu updated');\n                }\n            } else {\n                console.error('Failed to fetch suggestions:', response.status);\n            }\n        } catch (error) {\n        console.error('Failed to fetch suggestions:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (user_cpu) fetchSuggestions(user_cpu, 'CPU');\n    }, [user_cpu]);\n\n    useEffect(() => {\n        if (user_gpu) fetchSuggestions(user_gpu, 'GPU');\n    }, [user_gpu]);\n\n  return (\n        <div className=\"relative-container\">\n            <form onSubmit={handleSubmit}>\n            <label htmlFor='game_name'>Game</label><br/>\n            <input\n                type='text'\n                id='game_name'\n                name='game_name'\n                placeholder='Enter Name of the Game here'\n                value={game_name}\n                onChange= {onChange}\n            />\n            <br/>\n            <label htmlFor='user_cpu'>User CPU</label><br/>\n            <input\n            type='text'\n            id='user_cpu'\n            name='user_cpu'\n            placeholder='Enter your CPU here'\n            value={user_cpu}\n            onChange={onChange}\n            onFocus={() => setCpuFocused(true)}\n            onBlur={() => setCpuFocused(false)}\n            />\n            <div>\n            {cpuFocused && cpuSuggestions.length > 0 ? (\n                <div className=\"suggestions\">\n                {cpuSuggestions.map((suggestion, index) => (\n                    <div \n                    className=\"suggestion-item\"\n                    key={index} \n                    onClick={() => {\n                        onChange({ target: { name: 'user_cpu', value: suggestion.Model } });\n                    }}\n                    >\n                    {suggestion.Model}\n                    </div>\n                ))}\n                </div>\n            ) : null}\n            </div>\n            <br/>\n            <label htmlFor='user_gpu'>User GPU</label><br/>\n            <input\n                type='text'\n                id='user_gpu'\n                name='user_gpu'\n                placeholder='Enter your GPU here'\n                value={user_gpu}\n                onChange= {onChange}\n            />\n            <div>\n            {gpuSuggestions.map((suggestion, index) => (\n                <div key={index}>{suggestion.model}</div>\n            ))}\n            </div>\n            <br/>\n            <label htmlFor='user_ram'>User RAM</label><br/>\n            <input\n                type='text'\n                id='user_ram'\n                name='user_ram'\n                placeholder='Enter your RAM here'\n                value={user_ram}\n                onChange= {onChange}\n            />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n  );\n}\n\nexport default FrontPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}